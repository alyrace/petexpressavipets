# Generated by Django 3.2.5 on 2021-10-01 07:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import notery.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Kanban',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Name')),
                ('photo', models.CharField(blank=True, max_length=100, null=True, verbose_name='Photo')),
                ('groups', models.IntegerField(verbose_name='Groups')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='notery.note', verbose_name='Parent')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PageElement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('element_type', models.CharField(max_length=85, verbose_name='Element Type')),
                ('order_on_page', models.FloatField(verbose_name='Page Order')),
                ('group', models.IntegerField(verbose_name='Group')),
                ('column', models.IntegerField(verbose_name='Column')),
                ('color', models.CharField(blank=True, max_length=100, null=True, verbose_name='Color')),
                ('note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='page_elements', to='notery.note', verbose_name='Note')),
            ],
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
                ('page_element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='table', to='notery.pageelement', verbose_name='Page Element')),
            ],
        ),
        migrations.CreateModel(
            name='TableData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Text')),
                ('number', models.FloatField(blank=True, null=True, verbose_name='Number')),
                ('date', models.DateTimeField(blank=True, null=True, verbose_name='Date')),
                ('checkbox', models.BooleanField(blank=True, null=True, verbose_name='Checkbox')),
                ('url', models.CharField(blank=True, max_length=200, null=True, verbose_name='Url')),
                ('property_type', models.CharField(max_length=100, verbose_name='Property Type')),
                ('header', models.BooleanField(verbose_name='Header')),
                ('width', models.IntegerField(verbose_name='Width')),
                ('order', models.FloatField(verbose_name='Order')),
            ],
        ),
        migrations.CreateModel(
            name='Todo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='Description')),
                ('completed', models.BooleanField(verbose_name='Completed')),
                ('page_element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='todo', to='notery.pageelement', verbose_name='Page Element')),
            ],
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, max_length=5000, null=True, verbose_name='Text')),
                ('page_element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='text', to='notery.pageelement', verbose_name='Page Element')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('color', models.CharField(max_length=100, verbose_name='Color')),
                ('table_data', models.ManyToManyField(blank=True, related_name='tags', to='notery.TableData', verbose_name='Table Data')),
                ('table_head', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tag_heads', to='notery.tabledata', verbose_name='Table Header')),
            ],
        ),
        migrations.CreateModel(
            name='TableRow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.FloatField(verbose_name='Float')),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rows', to='notery.table', verbose_name='Table')),
            ],
        ),
        migrations.AddField(
            model_name='tabledata',
            name='table_row',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data', to='notery.tablerow', verbose_name='Table Row'),
        ),
        migrations.CreateModel(
            name='PageLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notery.note', verbose_name='Page')),
                ('page_element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='page_link', to='notery.pageelement', verbose_name='Page Element')),
            ],
        ),
        migrations.CreateModel(
            name='KanbanGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Name')),
                ('color', models.CharField(max_length=100, verbose_name='Color')),
                ('order', models.FloatField(verbose_name='Order')),
                ('kanban', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kanbangroup', to='notery.kanban', verbose_name='Kanban')),
            ],
        ),
        migrations.CreateModel(
            name='KanbanCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('description', models.TextField(blank=True, max_length=500, null=True, verbose_name='Description')),
                ('order_on_group', models.FloatField(verbose_name='Group Order')),
                ('image', models.ImageField(blank=True, upload_to=notery.models.upload_to, verbose_name='Image')),
                ('image_url', models.URLField(blank=True, verbose_name='Image Url')),
                ('color', models.CharField(blank=True, max_length=6, verbose_name='Color')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('kanban_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kanbancard', to='notery.kanbangroup', verbose_name='Kanban Group')),
            ],
        ),
        migrations.AddField(
            model_name='kanban',
            name='page_element',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kanban', to='notery.pageelement', verbose_name='Page Element'),
        ),
        migrations.CreateModel(
            name='Heading_2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading_text', models.CharField(blank=True, max_length=85, null=True, verbose_name='Heading Text 2')),
                ('page_element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='heading_2', to='notery.pageelement', verbose_name='Page Element')),
            ],
        ),
        migrations.CreateModel(
            name='Heading_1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading_text', models.CharField(blank=True, max_length=85, null=True, verbose_name='Heading Text')),
                ('page_element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='heading_1', to='notery.pageelement', verbose_name='Page Element')),
            ],
        ),
    ]
